---
import Layout from "@layouts/Layout.astro";
import { Image, Picture, getImage } from "astro:assets";
import image1 from "@assets/images/image1.jpg";

import cat1 from "@assets/images/1000/cat_1.jpg";
import cat2 from "@assets/images/1000/cat_2.jpg";
import cat3 from "@assets/images/1000/cat_3.jpg";

import catp1 from "@assets/images/1000/cat_p1.jpg";
import cats1 from "@assets/images/1000/cat_s1.jpg";

import image4 from "@assets/images/mono-asian.jpg";
import image5 from "@images/placeholders/try-this.jpg";

const optimizedBackground = await getImage({
  src: catp1,
  format: "avif",
  quality: 69,
});

const optimizedBackground2 = await getImage({
  src: image4,
  format: "avif",
  quality: 69,
});
---

<Layout title="News homepage">
  <h1>Image Tests</h1>10
  <div class="grid-two">
    <div>
      <Picture
        src={image1}
        alt="XXX"
        class="picture-class"
        formats={["avif", "webp"]}
        quality={30}
        widths={[100, 200, 1200]}
      /><p>Picture: Preferred as it handles sourcsets</p>
    </div>
    <div>
      <Image
        src={image1}
        alt="XXX"
        class="image-class"
        quality={1}
        widths={[200, 400, 600]}
      /><p>Image, with image quality set to 1!</p>
    </div>
    <div>
      <Picture
        src={cat3}
        alt="XXX"
        class="picture-class"
        formats={["avif", "webp"]}
        quality={50}
        widths={[200, 400, 600]}
      /><p>Format: Picture</p>
    </div>
    <div>
      <Image
        src={cat3}
        alt="XXX"
        class="image-class"
        quality={50}
        widths={[200, 400, 600]}
      /><p>Format: Images</p>
    </div>
  </div>
  <h2>More Tests</h2>
  <div class="grid-two">
    <div>
      <Picture
        src={catp1}
        alt="XXX"
        class="cover ar1"
        formats={["avif", "webp"]}
        quality={60}
        widths={[500, 1300]}
      /><p>Cover/Picture Aspect Ratio 1</p>
    </div>
    <div>
      <Picture
        src={catp1}
        alt="XXX"
        class="contain ar1"
        formats={["avif", "webp"]}
        quality={60}
        widths={[500, 1300]}
      /><p>Contain/Picture Aspect Ratio 1</p>
    </div>
    <div>
      <Picture
        src={catp1}
        alt="XXX"
        class="cover ar2"
        formats={["avif", "webp"]}
        quality={60}
        widths={[500, 1300]}
      /><p>Cover/Picture Aspect Ratio 2:1</p>
    </div>
    <div>
      <Picture
        src={catp1}
        alt="XXX"
        class="contain ar2"
        formats={["avif", "webp"]}
        quality={60}
        widths={[500, 1300]}
      /><p>Contain/Picture Aspect Ratio 2:1</p>
    </div>
    <div>
      <Picture
        src={catp1}
        alt="XXX"
        class="fill ar2"
        formats={["avif", "webp"]}
        quality={60}
        widths={[500, 1300]}
      /><p>
        Fill/Picture Aspect Ratio 2:1<br /><i
          >Avoid as this causes Lighthouse to issue error</i
        >
      </p>
      <Picture
        src={catp1}
        alt="XXX"
        formats={["avif", "webp"]}
        quality={60}
        widths={[500, 1300]}
      />
      <p>None</p>
    </div>
  </div>
  <div class="back">
    <div class="inner">
      <h1>Background Image Is Optimised</h1>
      <p>
        Astro GetImage, then pass the object through to CSS using define:vars
      </p><br />
      <code>
        define:vars={
          {
            bgx: `url(${optimizedBackground.src})`,
          }
        }</code
      >
      <Picture
        src={catp1}
        alt="XXX"
        formats={["avif", "webp"]}
        quality={90}
        widths={[500, 1300]}
      />
    </div>
  </div>
  <div class="backmask"></div>
</Layout>
<style
  define:vars={{
    bgx: `url(${optimizedBackground.src})`,
    back2: `url(${optimizedBackground2.src})`,
  }}
>
  .grid-two {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
    max-width: 80%;
    margin: auto;
  }
  .back {
    max-width: 100dvw;
    min-height: 100dvh;
    /* background-color: rgb(30, 117, 193); */
    background-image: var(--back2);
    background-size: 100%;
  }
  .backmask {
    max-width: 100vw;
    min-height: 100vh;
    /* background-color: rgb(30, 117, 193); */
    background-image: var(--bgx);
    background-size: 100%;
    mask-image: url(/images/mask-asian.svg);
    /* mask-mode: alpha; */
  }
  .inner {
    max-width: 40dvw;
    margin: 0 auto;
    padding-block: 2rem;
    padding-inline: 2rem;
    background-color: oklch(70% 0.334 334.74 /0.76);
  }
  img {
    width: 100%;
    height: auto;
  }
  picture {
    outline: solid 14px pink;
  }
  img {
    outline: solid 2px oklch(65% 0.2899 10.84);
  }
  .cover {
    outline: dotted green 2px;
    object-fit: cover;
  }
  .contain {
    outline: dotted rgb(32, 0, 128) 2px;
    object-fit: contain;
  }
  .contain {
    outline: dotted rgb(32, 0, 128) 2px;
    object-fit: contain;
  }
  .fill {
    outline: dotted rgb(32, 128, 0) 2px;
    object-fit: fill;
  }
  .ar1 {
    aspect-ratio: 1;
  }
  .ar2 {
    aspect-ratio: 2/ 1;
  }
</style>
